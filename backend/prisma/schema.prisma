generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model entreprise {
  Id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(150)
  speciality  String?       @db.VarChar(150)
  logo_source String?       @db.VarChar(250)
  logo_name   String?       @db.VarChar(150)
  masterclass masterclass[]
}

model category {
  Id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(150)
  masterclass masterclass[]
}

model favorite {
  user_Id        Int
  masterclass_Id Int
  masterclass    masterclass @relation(fields: [masterclass_Id], references: [Id], onDelete: Cascade, onUpdate: NoAction)
  user           user        @relation(fields: [user_Id], references: [Id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_Id, masterclass_Id])
}

model keyword {
  Id                      Int                       @id @default(autoincrement())
  name                    String                    @unique @db.VarChar(150)
  masterclass_has_keyword masterclass_has_keyword[]
}

model masterclass {
  Id            Int                       @id @default(autoincrement())
  title         String                    @db.VarChar(150)
  source        String                    @db.VarChar(1000)
  description   String                    @db.VarChar(3000)
  entreprise_Id Int?
  category_Id   Int?
  entreprise    entreprise?               @relation(fields: [entreprise_Id], references: [Id], onDelete: SetNull, onUpdate: Cascade)
  category      category?                 @relation(fields: [category_Id], references: [Id], onDelete: SetNull, onUpdate: Cascade)
  favorite      favorite[]
  keywords      masterclass_has_keyword[]
}

model masterclass_has_keyword {
  masterclass_Id Int
  keyword_Id     Int
  keyword        keyword     @relation(fields: [keyword_Id], references: [Id], onDelete: Cascade, onUpdate: Cascade)
  masterclass    masterclass @relation(fields: [masterclass_Id], references: [Id], onDelete: Cascade, onUpdate: Cascade)

  @@id([masterclass_Id, keyword_Id])
}

model user {
  Id            Int        @id @default(autoincrement())
  firstname     String     @db.VarChar(150)
  lastname      String     @db.VarChar(150)
  email         String     @unique @db.VarChar(255)
  password      String     @db.VarChar(3000)
  birthday_date DateTime?  @db.DateTime(0)
  role          String     @default("user") @db.VarChar(3000)
  professional  Boolean    @default(false) @db.TinyInt
  company       String?    @db.VarChar(300)
  favorite      favorite[]
}
